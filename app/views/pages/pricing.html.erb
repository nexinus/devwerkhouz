<%# Optional: set a page title for layout %>
<% content_for :title, "Pricing — devwerkhouz" %>

<section class="bg-neutral-50 min-h-screen flex items-center justify-center py-12">
  <div class="w-full max-w-4xl px-6">
    <div class="text-center mb-10">
      <h1 class="text-4xl font-extrabold text-neutral-800">Pricing Plans</h1>
      <p class="mt-3 text-neutral-600">Choose a plan that fits your prompt-powered workflow — generate, save & reuse prompts.</p>
    </div>

    <div class="grid gap-8 md:grid-cols-2">
      <!-- Pro Plan -->
      <div class="relative bg-white rounded-xl shadow-lg hover:shadow-xl transition-shadow p-8 flex flex-col">
        <div class="absolute left-6 top-6 w-12 h-1 rounded" style="background: linear-gradient(90deg,#FF7A18,#E65A00)"></div>

        <div class="mt-4">
          <h2 class="text-2xl font-bold text-brand mb-3">Pro</h2>
          <p class="text-neutral-600 mb-6">Full access: generate, save, export unlimited prompts + priority support.</p>
          <p class="text-neutral-800 font-semibold text-lg mb-6">€12 / month</p>
        </div>

        <div class="mt-auto">
          <button id="checkout-button"
                  data-price-id="<%= ENV['STRIPE_PRICE_ID'] || 'price_1SATZaIoRaH50WhR5sShQueN' %>"
                  style="box-shadow: 0 6px 18px rgba(230,90,0,0.12)"
                  class="w-full inline-block px-6 py-3 bg-orange-600 hover:bg-orange-600 text-white font-bold rounded-lg shadow-lg transition-colors disabled:opacity-60">
            Subscribe
          </button>

          <p class="mt-3 text-xs text-neutral-500">Secure checkout powered by Stripe. You can cancel anytime.</p>
        </div>
      </div>

      <!-- Starter Plan -->
      <div class="bg-white rounded-xl shadow-lg hover:shadow-xl transition-shadow p-8 flex flex-col">
        <div>
          <h2 class="text-2xl font-bold text-neutral-800 mb-3">Starter</h2>
          <p class="text-neutral-600 mb-6">Try it out: generate prompts with limited saves.</p>
          <p class="text-neutral-800 font-semibold text-lg mb-6">Free</p>
        </div>

        <div class="mt-auto">
          <%= link_to "Get Started", root_path, class: "w-full inline-block px-6 py-3 bg-gray-300 hover:bg-gray-400 text-neutral-800 font-bold rounded-lg shadow transition-colors text-center" %>
          <p class="mt-3 text-xs text-neutral-500">No card required — start composing prompts right away.</p>
        </div>
      </div>
    </div>
  </div>
</section>

<%# Inject Stripe publishable key for JS to read %>
<meta name="stripe-pk" content="<%= ENV['STRIPE_PUBLISHABLE_KEY'] || Rails.application.credentials.dig(:stripe, :public_key) %>">

<%= javascript_tag do %>
  (function () {
    // read CSRF token from meta tag (if present)
    function csrfToken() {
      var m = document.querySelector("meta[name='csrf-token']");
      return m ? m.content : null;
    }

    async function ajaxCreateCheckout(priceId) {
      var url = "<%= create_checkout_session_path %>";

      var headers = {
        "Content-Type": "application/json",
        "Accept": "application/json"
      };
      var token = csrfToken();
      if (token) headers["X-CSRF-Token"] = token;

      var resp = await fetch(url, {
        method: "POST",
        headers: headers,
        body: JSON.stringify({ priceId: priceId })
      });

      var json = {};
      try { json = await resp.json(); } catch(e) { /* ignore */ }

      if (!resp.ok) {
        var msg = json.error || ("HTTP " + resp.status);
        throw new Error(msg);
      }

      return json;
    }

    document.addEventListener("DOMContentLoaded", function () {
      var btn = document.getElementById("checkout-button");
      if (!btn) {
        console.warn("checkout-button not found on page");
        return;
      }

      btn.addEventListener("click", async function (ev) {
        ev.preventDefault();
        try {
          btn.disabled = true;
          btn.dataset.origText = btn.innerText;
          btn.innerText = "Preparing…";

          var priceId = btn.dataset.priceId;
          if (!priceId) throw new Error("Missing price id on button dataset");

          var result = await ajaxCreateCheckout(priceId);

          // prefer a server-provided redirect URL (Stripe newer API returns url)
          if (result && result.url) {
            window.location.href = result.url;
            return;
          }

          // fallback: older API might return session id only
          if (result && result.id) {
            // if you want to use client side stripe.redirectToCheckout you'd need pk
            // but simplest fallback: open Checkout hosted page via server route if available
            window.location.href = "/checkout/" + result.id;
            return;
          }

          throw new Error("Invalid response from server");
        } catch (err) {
          console.error("Checkout error:", err);
          alert(err.message || "Error creating checkout session. See console for details.");
          btn.disabled = false;
          btn.innerText = btn.dataset.origText || "Subscribe";
        }
      });
    });
  })();
<% end %>
