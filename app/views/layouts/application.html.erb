<!DOCTYPE html>
<html lang="en">
  <head>
    <title><%= content_for(:title) || "devwerkhouz â€” The houz for your AI Prompt" %></title>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width,initial-scale=1">
    <meta name="apple-mobile-web-app-capable" content="yes">
    <meta name="mobile-web-app-capable" content="yes">
    <%= csrf_meta_tags %>
    <%= csp_meta_tag %>

    <%= yield :head %>

    <%# Enable PWA manifest for installable apps (make sure to enable in config/routes.rb too!) %>
    <%#= tag.link rel: "manifest", href: pwa_manifest_path(format: :json) %>

    <link rel="icon" href="<%= asset_path 'favicon.ico' %>" type="image/x-icon">
    <link rel="apple-touch-icon" href="<%= asset_path 'logo.png' %>">

    <%# Includes all stylesheet files in app/assets/stylesheets %>
    <%= stylesheet_link_tag "tailwind", "data-turbo-track": "reload" %>
    <%= stylesheet_link_tag "application", "data-turbo-track": "reload" %>
    <%= javascript_include_tag "application", "data-turbo-track": "reload", defer: true %>
    <%= javascript_importmap_tags %>
  </head>

  <body class="min-h-screen bg-gray-50 text-gray-900">
  <div id="app" class="flex h-screen overflow-hidden">
    <!-- Sidebar (collapsible) -->
    <%= render 'shared/sidebar' %>

    <!-- Main area (header + content + footer inside a vertical column) -->
    <div class="flex-1 flex flex-col min-h-0">
      <!-- Header -->
      <header class="border-b bg-white">
        <div class="max-w-6xl mx-auto px-4 sm:px-6 lg:px-8">
          <%= render 'shared/header' %>
        </div>
      </header>

      <!-- Content area -->
      <main id="main" class="flex-1 overflow-auto">
        <div class="max-w-6xl mx-auto px-4 sm:px-6 lg:px-8 py-6">
          <% flash.each do |key, message| %>
            <div class="mb-3 p-3 rounded text-sm <%= key == 'notice' ? 'bg-brand/10 text-brand' : 'bg-red-50 text-red-800' %>">
              <%= message %>
            </div>
          <% end %>

          <%= yield %>
        </div>
      </main>

      <!-- Footer -->
      <footer class="border-t bg-white">
        <div class="max-w-6xl mx-auto px-4 sm:px-6 lg:px-8 py-4">
          <%= render 'shared/footer' %>
        </div>
      </footer>
    </div>
  </div>

  <!-- Cookie consent -->
  <%= render 'shared/cookie_consent' %>

  <!-- Sidebar toggle + small helper JS -->
  <script>
    (function() {
      const root = document.getElementById('app');
      const sidebar = document.getElementById('sidebar');
      const collapseBtn = document.getElementById('sidebarCollapseBtn');
      const SIDEBAR_KEY = 'devwerkhouz_sidebar_open';

      // elements we'll toggle
      const labelNodes = () => Array.from(document.querySelectorAll('[data-label]'));
      const newTop = document.getElementById('newPromptTop');
      const newCompact = document.getElementById('newPromptCompact');
      const newBottom = document.getElementById('newPromptBottom');
      const historyEl = document.getElementById('sidebarHistory');

      function isOpen() {
        return localStorage.getItem(SIDEBAR_KEY) !== 'false';
      }

      function showLabels(show) {
        labelNodes().forEach(n => {
          if (show) n.classList.remove('hidden'); else n.classList.add('hidden');
        });
      }

      function applyState() {
        if (!sidebar) return;

        if (isOpen()) {
          sidebar.classList.remove('w-20','w-16');
          sidebar.classList.add('w-64');

          root?.classList.remove('sidebar-closed');
          root?.classList.add('sidebar-open');

          showLabels(true);

          if (newTop) newTop.classList.remove('hidden');
          if (newCompact) newCompact.classList.add('hidden');

          if (newBottom) newBottom.classList.remove('hidden');

          if (historyEl) historyEl.classList.remove('hidden');
        } else {
          sidebar.classList.remove('w-64');
          sidebar.classList.add('w-20');

          root?.classList.remove('sidebar-open');
          root?.classList.add('sidebar-closed');

          showLabels(false);

          if (newTop) newTop.classList.add('hidden');
          if (newCompact) newCompact.classList.remove('hidden');

          if (newBottom) newBottom.classList.add('hidden');

          if (historyEl) historyEl.classList.add('hidden');
        }
      }

      function toggleSidebar() {
        const newState = !isOpen();
        localStorage.setItem(SIDEBAR_KEY, newState ? 'true' : 'false');
        applyState();
      }

      if (collapseBtn) collapseBtn.addEventListener('click', toggleSidebar);
      window.toggleSidebar = toggleSidebar;

      if (window.innerWidth < 768 && localStorage.getItem(SIDEBAR_KEY) === null) {
        localStorage.setItem(SIDEBAR_KEY, 'false');
      }

      document.addEventListener('DOMContentLoaded', applyState);
      document.addEventListener('turbo:load', applyState);
      window.addEventListener('resize', applyState);
    })();
  </script>

  </body>
</html>
